version: 2
jobs:
  build-and-test:
    docker:
      - image: circleci/clojure:lein-2.8.1
      - image: liftbridge/liftbridge-docker:latest
    steps:
      - checkout
      - restore_cache:
          key: deps-{{ checksum "project.clj" }}
      - run:
          command: |
            lein deps
      - save_cache:
          key: deps-{{ checksum "project.clj" }}
          paths:
            - "~/.m2"
      - run:
          name: Waiting for Liftbridge server to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 9292 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for server && exit 1
      - run:
          command: |
            bin/kaocha

  lint:
    docker:
      - image: circleci/clojure:lein-2.8.1
    steps:
      - checkout
      - restore_cache:
          key: deps-{{ checksum "project.clj" }}
      - run:
          command: |
            lein deps
      - save_cache:
          key: deps-{{ checksum "project.clj" }}
          paths:
            - "~/.m2"
      - run:
          command: |
            lein cljfmt check

  deploy:
    docker:
      - image: circleci/clojure:lein-2.8.1
    steps:
      - add_ssh_keys:
          fingerprints:
            - "c5:32:ac:12:6e:79:13:00:b5:50:43:46:6b:27:e1:59"
      - checkout
      - restore_cache:
          key: deps-{{ checksum "project.clj" }}
      - run:
          command: |
            lein deps
      - save_cache:
          key: deps-{{ checksum "project.clj" }}
          paths:
            - "~/.m2"
      - run:
          name: run deploy
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "caioaao@gmail.com"
            git config user.name CircleCI
            lein release

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build-and-test
            - lint
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-(alpha|beta)[0-9]*)?/
            branches:
              ignore: /.*/
